{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json,
  "name": "Axiom",
  "scopeName": "source.axiom",
  "patterns": [
    { "include": "#comments" },
    { "include": "#meta_block" },
    { "include": "#persona_block" },
    { "include": "#rules_block" },
    { "include": "#interface_block" },
    { "include": "#types_block" },
    { "include": "#config_block" },
    { "include": "#payload_block" },
    { "include": "#tests_block" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash.axiom", "match": "//.*" }
      ]
    },

    "meta_block": {
      "begin": "\\b(meta|config)\\b\\s*({)", "end": "(})",
      "beginCaptures": {
        "1": { "name": "keyword.control.block.axiom" },
        "2": { "name": "punctuation.definition.block.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
      "patterns": [ { "include": "#key_value_pair" } ]
    },

    "persona_block": {
      "patterns": [{
        "match": "\\b(persona)\\b\\s*(:)\\s*(\".*\")",
        "captures": {
          "1": { "name": "keyword.control.block.axiom" },
          "2": { "name": "punctuation.separator.key-value.axiom" },
          "3": { "name": "string.quoted.double.axiom" }
        }
      }]
    },

    "rules_block": {
      "begin": "\\b(rules)\\b\\s*({)", "end": "(})",
      "beginCaptures": {
        "1": { "name": "keyword.control.block.axiom" },
        "2": { "name": "punctuation.definition.block.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
      "patterns": [ { "include": "#rules_list_item" } ]
    },

    "interface_block": {
      "begin": "\\b(interface)\\b\\s*({)", "end": "(})",
      "beginCaptures": {
        "1": { "name": "keyword.control.block.axiom" },
        "2": { "name": "punctuation.definition.block.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
      "patterns": [ { "include": "#inputs_outputs_block" } ]
    },

    "types_block": {
        "begin": "\\b(types)\\b\\s*({)", "end": "(})",
        "beginCaptures": {
            "1": { "name": "keyword.control.block.axiom" },
            "2": { "name": "punctuation.definition.block.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
        "patterns": [ { "include": "#struct_definition" } ]
    },

    "struct_definition": {
        "begin": "\\b(struct)\\b\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*({)", "end": "(})",
        "beginCaptures": {
            "1": { "name": "storage.type.struct.axiom" },
            "2": { "name": "entity.name.type.struct.axiom" },
            "3": { "name": "punctuation.definition.block.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
        "patterns": [ { "include": "#field_definition" } ]
    },

    "inputs_outputs_block": {
        "begin": "\\b(inputs|outputs)\\b\\s*({)", "end": "(})",
        "beginCaptures": {
            "1": { "name": "entity.name.tag.axiom" },
            "2": { "name": "punctuation.definition.block.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
        "patterns": [ { "include": "#field_definition" } ]
    },

    "field_definition": {
      "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*(:)",
      "end": "(?=\\s*[a-zA-Z_}]|\\s*})",
      "beginCaptures": {
        "1": { "name": "variable.parameter.axiom" },
        "2": { "name": "punctuation.separator.key-value.axiom" }
      },
      "patterns": [
        { "include": "#type_definition" },
        { "include": "#directive_block" }
      ]
    },

    "type_definition": {
      "patterns": [
        { "name": "storage.type.axiom", "match": "\\b(String|Int|Float|Boolean|Enum|List|[A-Z][a-zA-Z0-9_]*)\\b" },
        { "name": "punctuation.definition.generic.begin.axiom", "match": "<" },
        { "name": "punctuation.definition.generic.end.axiom", "match": ">" },
        { "name": "punctuation.definition.enum.begin.axiom", "match": "\\(" },
        { "name": "punctuation.definition.enum.end.axiom", "match": "\\)" },
        { "name": "string.quoted.double.axiom", "match": "\".*?\"" },
        { "name": "punctuation.separator.comma.axiom", "match": "," }
      ]
    },

    "directive_block": {
      "begin": "(\\()", "end": "(\\))",
      "beginCaptures": { "1": { "name": "punctuation.definition.directive.begin.axiom" } },
      "endCaptures": { "1": { "name": "punctuation.definition.directive.end.axiom" } },
      "patterns": [
        { "include": "#key_value_pair" },
        { "name": "punctuation.separator.comma.axiom", "match": "," }
      ]
    },

    "key_value_pair": {
        "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*(:)\\s*(\".*?\"|[-+]?[0-9]+(?:\\.[0-9]+)?|true|false)",
        "captures": {
          "1": { "name": "entity.name.variable.axiom" },
          "2": { "name": "punctuation.separator.key-value.axiom" },
          "3": { "patterns": [
              { "name": "string.quoted.double.axiom", "match": "\".*?\"" },
              { "name": "constant.numeric.axiom", "match": "[-+]?[0-9]+(?:\\.[0-9]+)?" },
              { "name": "constant.language.boolean.axiom", "match": "true|false" }
          ]}
        }
    },

    "rules_list_item": {
        "match": "^\\s*(-)\\s*(\".*\")",
        "captures": {
          "1": { "name": "punctuation.definition.list.axiom" },
          "2": { "name": "string.quoted.double.axiom" }
        }
    },

    "payload_block": {
      "begin": "\\b(payload)\\b\\s*(<<<)", "end": "(>>>)",
      "beginCaptures": {
        "1": { "name": "keyword.control.block.axiom" },
        "2": { "name": "punctuation.definition.string.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.string.end.axiom" } },
      "contentName": "string.unquoted.payload.axiom",
      "patterns": [{
          "name": "meta.embedded.block.jinja.axiom",
          "begin": "{{", "end": "}}",
          "patterns": [ { "include": "source.jinja" } ]
      }]
    },

    "tests_block": {
      "begin": "\\b(tests)\\b\\s*({)", "end": "(})",
      "beginCaptures": {
        "1": { "name": "keyword.control.block.axiom" },
        "2": { "name": "punctuation.definition.block.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
      "patterns": [ { "include": "#test_case" } ]
    },

    "test_case": {
      "begin": "\\b(test)\\b\\s*(\".*\")\\s*({)", "end": "(})",
      "beginCaptures": {
        "1": { "name": "keyword.control.test.axiom" },
        "2": { "name": "string.quoted.double.axiom" },
        "3": { "name": "punctuation.definition.block.begin.axiom" }
      },
      "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
      "patterns": [
        { "include": "#comments" },
        { "include": "#test_inputs_block" },
        { "include": "#assert_block" },
        { "include": "#test_expected_output_block" }
      ]
    },

    "test_inputs_block": {
        "begin": "\\b(inputs)\\b\\s*({)", "end": "(})",
        "beginCaptures": {
          "1": { "name": "entity.name.tag.axiom" },
          "2": { "name": "punctuation.definition.block.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
        "patterns": [ { "include": "#key_value_pair" } ]
    },

    "assert_block": {
        "begin": "\\b(assert)\\b\\s*({)", "end": "(})",
        "beginCaptures": {
          "1": { "name": "keyword.control.assert.axiom" },
          "2": { "name": "punctuation.definition.block.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.block.end.axiom" } },
        "patterns": [ { "include": "#rules_list_item" } ]
    },

    "test_expected_output_block": {
        "begin": "\\b(expected_output)\\b\\s*(<<<)", "end": "(>>>)",
        "beginCaptures": {
          "1": { "name": "entity.name.tag.axiom" },
          "2": { "name": "punctuation.definition.string.begin.axiom" }
        },
        "endCaptures": { "1": { "name": "punctuation.definition.string.end.axiom" } },
        "contentName": "source.json.embedded.axiom",
        "patterns": [ { "include": "source.json" } ]
    }
  }
}