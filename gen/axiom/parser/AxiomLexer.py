# Generated from axiom/parser/Axiom.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,329,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
        1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,30,
        1,30,1,31,1,31,1,32,1,32,1,33,1,33,5,33,264,8,33,10,33,12,33,267,
        9,33,1,34,1,34,1,34,1,34,5,34,273,8,34,10,34,12,34,276,9,34,1,34,
        1,34,1,35,3,35,281,8,35,1,35,4,35,284,8,35,11,35,12,35,285,1,35,
        1,35,4,35,290,8,35,11,35,12,35,291,3,35,294,8,35,1,36,1,36,1,36,
        1,36,1,36,5,36,301,8,36,10,36,12,36,304,9,36,1,36,1,36,1,36,1,36,
        1,37,4,37,311,8,37,11,37,12,37,312,1,37,1,37,1,38,1,38,1,38,1,38,
        5,38,321,8,38,10,38,12,38,324,9,38,1,38,1,38,1,38,1,38,3,274,302,
        322,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,1,0,5,3,0,65,90,95,95,97,122,4,
        0,48,57,65,90,95,95,97,122,2,0,34,34,92,92,1,0,48,57,3,0,9,10,13,
        13,32,32,338,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,
        1,0,0,0,3,81,1,0,0,0,5,83,1,0,0,0,7,85,1,0,0,0,9,92,1,0,0,0,11,98,
        1,0,0,0,13,102,1,0,0,0,15,110,1,0,0,0,17,112,1,0,0,0,19,114,1,0,
        0,0,21,119,1,0,0,0,23,125,1,0,0,0,25,132,1,0,0,0,27,137,1,0,0,0,
        29,142,1,0,0,0,31,150,1,0,0,0,33,156,1,0,0,0,35,166,1,0,0,0,37,172,
        1,0,0,0,39,179,1,0,0,0,41,186,1,0,0,0,43,194,1,0,0,0,45,201,1,0,
        0,0,47,209,1,0,0,0,49,215,1,0,0,0,51,220,1,0,0,0,53,236,1,0,0,0,
        55,243,1,0,0,0,57,248,1,0,0,0,59,253,1,0,0,0,61,255,1,0,0,0,63,257,
        1,0,0,0,65,259,1,0,0,0,67,261,1,0,0,0,69,268,1,0,0,0,71,280,1,0,
        0,0,73,295,1,0,0,0,75,310,1,0,0,0,77,316,1,0,0,0,79,80,5,44,0,0,
        80,2,1,0,0,0,81,82,5,58,0,0,82,4,1,0,0,0,83,84,5,45,0,0,84,6,1,0,
        0,0,85,86,5,83,0,0,86,87,5,116,0,0,87,88,5,114,0,0,88,89,5,105,0,
        0,89,90,5,110,0,0,90,91,5,103,0,0,91,8,1,0,0,0,92,93,5,70,0,0,93,
        94,5,108,0,0,94,95,5,111,0,0,95,96,5,97,0,0,96,97,5,116,0,0,97,10,
        1,0,0,0,98,99,5,73,0,0,99,100,5,110,0,0,100,101,5,116,0,0,101,12,
        1,0,0,0,102,103,5,66,0,0,103,104,5,111,0,0,104,105,5,111,0,0,105,
        106,5,108,0,0,106,107,5,101,0,0,107,108,5,97,0,0,108,109,5,110,0,
        0,109,14,1,0,0,0,110,111,5,60,0,0,111,16,1,0,0,0,112,113,5,62,0,
        0,113,18,1,0,0,0,114,115,5,116,0,0,115,116,5,114,0,0,116,117,5,117,
        0,0,117,118,5,101,0,0,118,20,1,0,0,0,119,120,5,102,0,0,120,121,5,
        97,0,0,121,122,5,108,0,0,122,123,5,115,0,0,123,124,5,101,0,0,124,
        22,1,0,0,0,125,126,5,105,0,0,126,127,5,109,0,0,127,128,5,112,0,0,
        128,129,5,111,0,0,129,130,5,114,0,0,130,131,5,116,0,0,131,24,1,0,
        0,0,132,133,5,102,0,0,133,134,5,114,0,0,134,135,5,111,0,0,135,136,
        5,109,0,0,136,26,1,0,0,0,137,138,5,109,0,0,138,139,5,101,0,0,139,
        140,5,116,0,0,140,141,5,97,0,0,141,28,1,0,0,0,142,143,5,112,0,0,
        143,144,5,101,0,0,144,145,5,114,0,0,145,146,5,115,0,0,146,147,5,
        111,0,0,147,148,5,110,0,0,148,149,5,97,0,0,149,30,1,0,0,0,150,151,
        5,114,0,0,151,152,5,117,0,0,152,153,5,108,0,0,153,154,5,101,0,0,
        154,155,5,115,0,0,155,32,1,0,0,0,156,157,5,105,0,0,157,158,5,110,
        0,0,158,159,5,116,0,0,159,160,5,101,0,0,160,161,5,114,0,0,161,162,
        5,102,0,0,162,163,5,97,0,0,163,164,5,99,0,0,164,165,5,101,0,0,165,
        34,1,0,0,0,166,167,5,116,0,0,167,168,5,121,0,0,168,169,5,112,0,0,
        169,170,5,101,0,0,170,171,5,115,0,0,171,36,1,0,0,0,172,173,5,115,
        0,0,173,174,5,116,0,0,174,175,5,114,0,0,175,176,5,117,0,0,176,177,
        5,99,0,0,177,178,5,116,0,0,178,38,1,0,0,0,179,180,5,105,0,0,180,
        181,5,110,0,0,181,182,5,112,0,0,182,183,5,117,0,0,183,184,5,116,
        0,0,184,185,5,115,0,0,185,40,1,0,0,0,186,187,5,111,0,0,187,188,5,
        117,0,0,188,189,5,116,0,0,189,190,5,112,0,0,190,191,5,117,0,0,191,
        192,5,116,0,0,192,193,5,115,0,0,193,42,1,0,0,0,194,195,5,99,0,0,
        195,196,5,111,0,0,196,197,5,110,0,0,197,198,5,102,0,0,198,199,5,
        105,0,0,199,200,5,103,0,0,200,44,1,0,0,0,201,202,5,112,0,0,202,203,
        5,97,0,0,203,204,5,121,0,0,204,205,5,108,0,0,205,206,5,111,0,0,206,
        207,5,97,0,0,207,208,5,100,0,0,208,46,1,0,0,0,209,210,5,116,0,0,
        210,211,5,101,0,0,211,212,5,115,0,0,212,213,5,116,0,0,213,214,5,
        115,0,0,214,48,1,0,0,0,215,216,5,116,0,0,216,217,5,101,0,0,217,218,
        5,115,0,0,218,219,5,116,0,0,219,50,1,0,0,0,220,221,5,101,0,0,221,
        222,5,120,0,0,222,223,5,112,0,0,223,224,5,101,0,0,224,225,5,99,0,
        0,225,226,5,116,0,0,226,227,5,101,0,0,227,228,5,100,0,0,228,229,
        5,95,0,0,229,230,5,111,0,0,230,231,5,117,0,0,231,232,5,116,0,0,232,
        233,5,112,0,0,233,234,5,117,0,0,234,235,5,116,0,0,235,52,1,0,0,0,
        236,237,5,97,0,0,237,238,5,115,0,0,238,239,5,115,0,0,239,240,5,101,
        0,0,240,241,5,114,0,0,241,242,5,116,0,0,242,54,1,0,0,0,243,244,5,
        69,0,0,244,245,5,110,0,0,245,246,5,117,0,0,246,247,5,109,0,0,247,
        56,1,0,0,0,248,249,5,76,0,0,249,250,5,105,0,0,250,251,5,115,0,0,
        251,252,5,116,0,0,252,58,1,0,0,0,253,254,5,123,0,0,254,60,1,0,0,
        0,255,256,5,125,0,0,256,62,1,0,0,0,257,258,5,40,0,0,258,64,1,0,0,
        0,259,260,5,41,0,0,260,66,1,0,0,0,261,265,7,0,0,0,262,264,7,1,0,
        0,263,262,1,0,0,0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,
        0,266,68,1,0,0,0,267,265,1,0,0,0,268,274,5,34,0,0,269,273,8,2,0,
        0,270,271,5,92,0,0,271,273,9,0,0,0,272,269,1,0,0,0,272,270,1,0,0,
        0,273,276,1,0,0,0,274,275,1,0,0,0,274,272,1,0,0,0,275,277,1,0,0,
        0,276,274,1,0,0,0,277,278,5,34,0,0,278,70,1,0,0,0,279,281,5,45,0,
        0,280,279,1,0,0,0,280,281,1,0,0,0,281,283,1,0,0,0,282,284,7,3,0,
        0,283,282,1,0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,286,1,0,0,
        0,286,293,1,0,0,0,287,289,5,46,0,0,288,290,7,3,0,0,289,288,1,0,0,
        0,290,291,1,0,0,0,291,289,1,0,0,0,291,292,1,0,0,0,292,294,1,0,0,
        0,293,287,1,0,0,0,293,294,1,0,0,0,294,72,1,0,0,0,295,296,5,60,0,
        0,296,297,5,60,0,0,297,298,5,60,0,0,298,302,1,0,0,0,299,301,9,0,
        0,0,300,299,1,0,0,0,301,304,1,0,0,0,302,303,1,0,0,0,302,300,1,0,
        0,0,303,305,1,0,0,0,304,302,1,0,0,0,305,306,5,62,0,0,306,307,5,62,
        0,0,307,308,5,62,0,0,308,74,1,0,0,0,309,311,7,4,0,0,310,309,1,0,
        0,0,311,312,1,0,0,0,312,310,1,0,0,0,312,313,1,0,0,0,313,314,1,0,
        0,0,314,315,6,37,0,0,315,76,1,0,0,0,316,317,5,47,0,0,317,318,5,47,
        0,0,318,322,1,0,0,0,319,321,9,0,0,0,320,319,1,0,0,0,321,324,1,0,
        0,0,322,323,1,0,0,0,322,320,1,0,0,0,323,325,1,0,0,0,324,322,1,0,
        0,0,325,326,5,10,0,0,326,327,1,0,0,0,327,328,6,38,0,0,328,78,1,0,
        0,0,11,0,265,272,274,280,285,291,293,302,312,322,1,6,0,0
    ]

class AxiomLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    IMPORT = 12
    FROM = 13
    META = 14
    PERSONA = 15
    RULES = 16
    INTERFACE = 17
    TYPES = 18
    STRUCT = 19
    INPUTS = 20
    OUTPUTS = 21
    CONFIG = 22
    PAYLOAD = 23
    TESTS = 24
    TEST = 25
    EXPECTED_OUTPUT = 26
    ASSERT = 27
    ENUM = 28
    LIST = 29
    LBRACE = 30
    RBRACE = 31
    LPAR = 32
    RPAR = 33
    ID = 34
    STRING = 35
    SIGNED_NUMBER = 36
    MULTILINE_CONTENT = 37
    WS = 38
    COMMENT = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "':'", "'-'", "'String'", "'Float'", "'Int'", "'Boolean'", 
            "'<'", "'>'", "'true'", "'false'", "'import'", "'from'", "'meta'", 
            "'persona'", "'rules'", "'interface'", "'types'", "'struct'", 
            "'inputs'", "'outputs'", "'config'", "'payload'", "'tests'", 
            "'test'", "'expected_output'", "'assert'", "'Enum'", "'List'", 
            "'{'", "'}'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "IMPORT", "FROM", "META", "PERSONA", "RULES", "INTERFACE", "TYPES", 
            "STRUCT", "INPUTS", "OUTPUTS", "CONFIG", "PAYLOAD", "TESTS", 
            "TEST", "EXPECTED_OUTPUT", "ASSERT", "ENUM", "LIST", "LBRACE", 
            "RBRACE", "LPAR", "RPAR", "ID", "STRING", "SIGNED_NUMBER", "MULTILINE_CONTENT", 
            "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "IMPORT", "FROM", "META", 
                  "PERSONA", "RULES", "INTERFACE", "TYPES", "STRUCT", "INPUTS", 
                  "OUTPUTS", "CONFIG", "PAYLOAD", "TESTS", "TEST", "EXPECTED_OUTPUT", 
                  "ASSERT", "ENUM", "LIST", "LBRACE", "RBRACE", "LPAR", 
                  "RPAR", "ID", "STRING", "SIGNED_NUMBER", "MULTILINE_CONTENT", 
                  "WS", "COMMENT" ]

    grammarFileName = "Axiom.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


